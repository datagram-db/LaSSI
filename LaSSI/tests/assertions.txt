// Alice and Bob
Alice plays football ⇒ play(Alice, football)
Bob plays football ⇒ play(Bob, football)
Alice and Bob play football ⇒ play(AND(Alice, Bob), football)
Alice or Bob play football ⇒ play(OR(Bob, Alice), football)
Alice doesn't play football ⇒ NOT(play(Alice, football))
Bob doesn't play football ⇒ NOT(play(Bob, football))
Dan plays football ⇒ play(Dan, football)
Neither Alice nor Bob play football ⇒ play(NEITHER(Bob, Alice), football)

// But not
Alice is playing but not joking ⇒ play(Alice[(action:playing)], ?1)[(AND:Alice[(action:is  playing )]), (AND:NOT(joking))]
Alice is playing but not in Newcastle ⇒ play(Alice, AND(NOT(Newcastle[(6:in)])))

// Cat and mouse
The cat eats the mouse ⇒ eat(cat[(det:The)], mouse[(det:the)])
The mouse is eaten by the cat ⇒ eat(cat[(subjpass:subjpass), (5:by), (det:the)], mouse[(det:The)])
The mouse eats the cat ⇒ eat(mouse[(det:The)], cat[(det:the)])
The cat is eaten by the mouse ⇒ eat(mouse[(subjpass:subjpass), (5:by), (det:the)], cat[(det:The)])
The cat doesn't eat the mouse ⇒ NOT(eat(cat[(det:The)], mouse[(det:the)]))
The mouse doesn't eat the cat ⇒ NOT(eat(mouse[(det:The)], cat[(det:the)]))

The cat eats ⇒ eat(cat[(action:eats), (det:The)], ?1)
The cat is eaten ⇒ eat(?2[(subjpass:subjpass)], cat[(det:The)])
The cat snores ⇒ snore(cat[(det:The), (action:snores)], None)

// Compounds
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])

// Newcastle
The busy Newcastle city centre is closed for traffic ⇒ close(?1, Newcastle[(extra:city centre), (det:The), (amod:busy)])[(ENTITY:traffic[(subjpass:subjpass), (8:for)])]

There is traffic but not in the Newcastle city centre ⇒ be(traffic, ?1)[(AND:NOT(Newcastle[(det:the), (extra:city centre), (6:in)]))]
Newcastle has traffic but not in the city centre ⇒ have(Newcastle, AND(traffic, NOT(city centre[(det:the), (6:in)])))

In Newcastle city center on Saturdays, traffic is flowing ⇒ flow in(traffic, None)[(DATE:Saturdays[(5:on)]), (GPE:Newcastle[(extra:city center), (1:In)]), (nmod(Newcastle[(extra:city center), (1:In)], Saturdays[(5:on)]))]
Traffic is flowing in Newcastle city centre, on Saturdays ⇒ flow on(Traffic, None)[(DATE:Saturdays[(9:on)]), (GPE:Newcastle[(4:in), (extra:city centre)])]

//On Saturdays, traffic is flowing in Newcastle city centre ⇒ flow(traffic, None)[(GPE:Newcastle[(7:in), (extra:city centre)]), (DATE:Saturdays[(1:On)])]
On Saturdays, traffic is flowing in Newcastle city centre ⇒ flow on(traffic, None)[(GPE:Newcastle[(7:in), (extra:city centre)]), (DATE:Saturdays[(1:On)])]

There is traffic in the Newcastle city centre ⇒ be(traffic[(action:is)], ?1)[(GPE:Newcastle[(det:the), (4:in), (extra:city centre)]), (nmod(traffic[(action:is)], Newcastle[(det:the), (4:in), (extra:city centre)]))]
In the Newcastle city centre there is traffic ⇒ be(traffic, ?2)[(GPE:Newcastle[(extra:city centre), (1:In), (det:the)])]
Newcastle city centre has traffic ⇒ have(Newcastle[(extra:city centre)], traffic)
There is traffic but not in the Newcastle city centre ⇒ be(traffic, ?3)[(AND:NOT(Newcastle[(det:the), (6:in), (extra:city centre)]))]
Newcastle has traffic but not in the city centre ⇒ have(Newcastle, AND(NOT(city centre[(6:in), (det:the)]), traffic))
Newcastle city center does not have traffic ⇒ NOT(have(Newcastle[(extra:city center)], traffic))
Newcastle city centre is trafficked ⇒ traffic(?2[(subjpass:subjpass)], None)[(GPE:Newcastle[(extra:city centre)])]
It is busy in Newcastle ⇒ be(It, busy)[(GPE:Newcastle[(4:in)])]
Saturdays have usually busy city centers ⇒ have(Saturdays, city centers[(JJ:busy[(advmod:usually)])])

// Negations
I like non green books ⇒ like(I, books[(JJ:NOT(green))])
I do not skate ⇒ NOT(skate(I[(action:skate)], None))

// Sentences
This is a beautiful world ⇒ be(This[(det:det)], world[(amod:beautiful), (det:a)])
This world is beautiful ⇒ be(world[(det:This)], beautiful)
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])
This is a fabulous Golden Gate Bridge picture ⇒ be(This[(det:det)], picture[(extra:Golden Gate Bridge), (amod:fabulous), (det:a)])

//
//To live freely you need to fight ⇒ need(you, fight[(mark:to)](?1, None)[(mark:to)])[(SENTENCE:live[(advmod:freely), (mark:To)](?1, None))]
To live freely you need to fight ⇒ need(you, fight[(mark:to)](?1, None)[(mark:to)])[(SENTENCE:live[(mark:To), (ENTITY:freely)](?1, None)[(ENTITY:freely)])]
to be, or not to be, that is the question ⇒ be(that[(det:det)], question[(punct:,), (det:the)])[(OR:be[(mark:to), (punct:,)]), (OR:NOT(be[(mark:to)]))]

// Single node
the dog ⇒ be(dog[(det:the)], ?1)
the roof ⇒ be(roof[(det:the)], ?2)
to fight ⇒ fight[(mark:to)](?3, None)
to be ⇒ be[(mark:to)](?4, None)

// Part 1
waste your time ⇒ waste(?1, time[(nmod_poss:your)])
coming to false conclusions ⇒ come to(?3, None)[(ENTITY:conclusions[(amod:false), (2:to)])]
bolt from blue ⇒ be(bolt, ?5[(cop:blue[(2:from)]), (2:from)])
things to be neat and orderly ⇒ be(things, AND(neat[(mark:to)], orderly))[(ENTITY:things)]
characters in movies ⇒ be(characters, ?6)[(nmod(characters, movies[(2:in)])), (ENTITY:movies[(2:in)])]
you like quilts ⇒ like(you, quilts)
buy dinner ⇒ buy(?7, dinner)

//the hot water to run out ⇒ be(water[(det:the), (amod:hot)], ?9)[(SENTENCE:run out[(mark:TO)](?1, None))]
the hot water to run out ⇒ be(water[(amod:hot), (det:the)], ?10)[(ENTITY:run out[(mark:to)])]

you become fatigued ⇒ become(you[(cop:fatigued)], None)

//attempt to steal someone's husband ⇒ be(attempt, ?10)[(SENTENCE:to steal(?1, husband[(5:'s), (nmod_poss:someone)]))]
attempt to steal someone's husband ⇒ be(attempt, ?11)[(nmod_poss(to steal(?1, husband)[(ENTITY:someone[(5:'s)]), (nmod_poss(husband, someone[(5:'s)])), (verb:attempt)], someone[(5:'s)])), (ENTITY:someone[(5:'s)]), (SENTENCE:to steal(?1, husband)[(ENTITY:someone[(5:'s)]), (nmod_poss(husband, someone[(5:'s)]))])]
attempt to steal someone's husband ⇒ be(attempt, ?11)[(SENTENCE:to steal(?1, husband)[(nmod_poss(husband, someone[(5:'s)])), (ENTITY:someone[(5:'s)])]), (nmod_poss(to steal(?1, husband)[(nmod_poss(husband, someone[(5:'s)])), (ENTITY:someone[(5:'s)]), (verb:attempt)], someone[(5:'s)]))]


// Part 2
plan your week ⇒ plan(?1, week[(nmod_poss:your)])
//privately administered region ⇒ be(region[(amod:administered), (advmod:privately)], ?1) using query without "actioned"
//privately administered region ⇒ administer(?1, region[(advmod:privately), (actioned:administered)])
privately administered region ⇒ administer(?1, region[(actioned:administered), (ENTITY:privately)])
accumulate fuel in a central location ⇒ accumulate(?3, fuel)[(ENTITY:location[(3:in), (amod:central), (det:a)])]
going off reservation ⇒ go off(?5, None)[(ENTITY:reservation)]
you become more wise ⇒ become(you[(cop:wise[(advmod:more)])], None)
going across the street ⇒ go across(?7, None)[(ENTITY:street[(det:the), (2:across)])]
eat a healthy salad ⇒ eat(?9, salad[(amod:healthy), (det:a)])
propulsion of aircraft ⇒ be(propulsion, ?11)[(nmod(propulsion, aircraft[(2:of)])), (ENTITY:aircraft[(2:of)])]

// Need to changed "tailed" from being a verb
//emilia's short tailed opossum ⇒ be(opossum[(nmod_poss:emilia), (2:'s)], ?15)[(SENTENCE:tail(?13[(cop:short)], None))]
emilia's short tailed opossum ⇒ be(opossum, ?14)[(noun:emilia[(2:'s)]), (nmod_poss(opossum, emilia[(2:'s)])), (SENTENCE:tail(?12[(cop:short)], None))]

If you move you ⇒ if move(you, you)
eating potato crisps ⇒ eat(?15, potato crisps)
reinforce it ⇒ reinforce(?17, it)
figuring out derivatives and integrals ⇒ figure out(?19, AND(derivatives, integrals))
a person to die ⇒ be(person[(det:a)], ?21)[(SENTENCE:die[(mark:to)](?1, None))]
information on current events ⇒ be(information, ?22)[(nmod(information, events[(amod:current), (2:on)])), (ENTITY:events[(amod:current), (2:on)])]
investing money in stock markets ⇒ invest(?23, money)[(ENTITY:stock markets[(3:in)])]
get one quart beer bottles ⇒ get(?25, quart beer bottles[(nummod:one)])
go to dogs ⇒ go to(?27, None)[(ENTITY:dogs[(2:to)])]
a band classroom ⇒ be(band classroom[(det:a)], ?29)
buying a beer ⇒ buy(?30, beer[(det:a)])

// Part 3
A "Life Saver" candy ⇒ be(candy[(det:A), (punct:"), (extra:Life Saver)], ?1)
slip of tongue ⇒ slip(?1, None)[(nmod(slip, tongue[(2:of)])), (ENTITY:tongue[(2:of)])]
more durable than latex ⇒ None(durable[(advmod:more)], None)[(ENTITY:latex[(3:than)])]
Few art gallery patrons ⇒ be(art[(amod:Few)], ?2)[(ENTITY:gallery patrons)]
a capatin ⇒ be(capatin[(det:a)], ?3)
try to work ⇒ try(?4, work[(mark:to)](?1, None)[(mark:to)])
putting trash in it ⇒ put(?6, trash)[(ENTITY:it[(3:in)])]
pocket sized notebooks ⇒ be(pocket, ?8[(cop:sized)])[(ENTITY:notebooks)]
cancer is a sickness and cure ⇒ be(cancer, AND(sickness[(det:a)], cure))
if they are rotten they ⇒ be(they[(cop:rotten[(mark:if)])], None)[(ENTITY:they)]
one person's grade ⇒ be(grade, ?9)[(nmod_poss(grade, person[(nummod:one), (3:'s)])), (ENTITY:person[(nummod:one), (3:'s)])]
practice and discipline ⇒ be(AND(practice, discipline), ?10)
fish in the water ⇒ be(fish, ?11)[(ENTITY:water[(det:the), (2:in)]), (nmod(fish, water[(det:the), (2:in)]))]
providing information to others ⇒ provide(?12, information)[(ENTITY:others[(3:to)])]
a learning experience ⇒ be(learning experience[(det:a)], ?14)
Taking classes in fencing ⇒ take(?15, classes)[(ENTITY:fencing[(3:in)])]
washing clothes ⇒ wash(?1, clothes[(actioned:washing)])
group of reindeer ⇒ be(group, ?17)[(ENTITY:reindeer[(2:of)]), (nmod(group, reindeer[(2:of)]))]

//attack opposing armies ⇒ attack(?18, oppose(?1, armies))
attack opposing armies ⇒ oppose(attack, armies)

A mixed breed dog ⇒ be(breed dog[(amod:mixed), (det:A)], ?19)
you set the timer ⇒ set(you, timer[(det:the)])

// Part 4
Music that is not classical ⇒ be(Music, ?1)[(SENTENCE:be(that, NOT(classical))), (acl_relcl(Music, be(that, NOT(classical))))]
a letter from a friend ⇒ be(letter[(det:a)], ?2)[(ENTITY:friend[(3:from), (det:a)]), (nmod(letter[(det:a)], friend[(3:from), (det:a)]))]
line of longitude ⇒ be(line, ?3)[(nmod(line, longitude[(2:of)])), (ENTITY:longitude[(2:of)])]
second battle of Ypres ⇒ be(battle[(amod:second)], ?4)[(GPE:Ypres[(3:of)]), (nmod(battle[(amod:second)], Ypres[(3:of)]))]
made into mummies ⇒ make into(?5, None)[(ENTITY:mummies[(2:into)])]
weigh the consequences ⇒ weigh(?7, consequences[(det:the)])
embryoma of the kidney ⇒ be(embryoma, ?9)[(nmod(embryoma, kidney[(det:the), (2:of)])), (ENTITY:kidney[(det:the), (2:of)])]
attend an interview ⇒ attend(?10, interview[(det:an)])
become able to answer more questions ⇒ become(?14[(cop:able)], None)[(SENTENCE:answer to(?12, questions[(amod:more)]))]
being on same track ⇒ being(?16, None)[(ENTITY:track[(amod:same), (2:on)])]

//used in the game of chess ⇒ use(?18, None)[(ENTITY:game[(det:the), (2:in)]), (ENTITY:chess[(5:of)]), (nmod(game[(det:the), (2:in)], chess[(5:of)]))]
used in the game of chess ⇒ use in(?19, None)[(nmod(game[(2:in), (det:the)], chess[(5:of)])), (ENTITY:game[(2:in), (det:the)]), (ENTITY:chess[(5:of)])]

support vessel ⇒ be(support vessel, ?20)
A hard working person ⇒ be(person[(det:A)], ?23)[(SENTENCE:work(?21[(cop:hard)], None))]
tackle the ball carrier ⇒ tackle(?23, ball carrier[(det:the)])
Mailboxes on the street ⇒ be(Mailboxes, ?26)[(ENTITY:street[(det:the), (2:on)]), (nmod(Mailboxes, street[(det:the), (2:on)]))]
having a burger ⇒ have(?27, burger[(det:a)])

//being informed about ongoings ⇒ inform(?29, None)[(ENTITY:ongoings[(3:about)])]
being informed about ongoings ⇒ inform about(?31, None)[(ENTITY:ongoings[(3:about)])]

you score well on tests ⇒ score well on(you, None)[(ENTITY:tests[(4:on)])]
run alot ⇒ run(?31, alot)
study closely ⇒ study(?1, closely)


// Part 5
use of many different muscles ⇒ use(?1, muscles[(amod:different), (2:of)])[(nmod(use, muscles[(amod:different), (2:of)]))]
starting something new ⇒ start(?1, something[(amod:new)])
the recipient opens the letter ⇒ open(recipient[(det:the)], letter[(det:the)])
the corner of two streets ⇒ be(corner[(det:the)], ?3)[(ENTITY:streets[(3:of), (nummod:two)]), (nmod(corner[(det:the)], streets[(3:of), (nummod:two)]))]
phase of cell division ⇒ be(phase, ?4)[(nmod(phase, cell division[(2:of)])), (ENTITY:cell division[(2:of)])]
carrying foods ⇒ carry(?5, foods)
mend a hole ⇒ mend(?7, hole[(det:a)])

//be on the interne ⇒ be(?1, ?9)[(SENTENCE:be(?1, None)), (ENTITY:interne[(2:on), (det:the)])]
be on the interne ⇒ be(?10, None)[(ENTITY:interne[(det:the), (2:on)])]

//come closer ⇒ come[(advmod:closer)](?1, None)
//come closer ⇒ come[(verb:closer)](?1, None)[(verb:closer)]
come closer ⇒ come[(ENTITY:closer)](?1, None)[(ENTITY:closer)]

get a heart attack ⇒ get(?10, heart attack[(det:a)])
make a silly noise ⇒ make(?12, noise[(det:a), (amod:silly)])
enjoying the car ⇒ enjoy(?14, car[(det:the)])
look for it ⇒ look for(?16, None)[(ENTITY:it[(2:for)])]
you might marry them ⇒ marry(you, them)
applaud the speaker ⇒ applaud(?18, None)[(ENTITY:speaker[(det:the)])]
friction between moms and their sons ⇒ between(friction, None)[(AND:moms[(2:between)]), (AND:sons[(nmod_poss:their)])]
discussing a business deal ⇒ discuss(?21, business deal[(det:a)])

//the essence of seeing is everywhere ⇒ be[(advmod:everywhere)](?1, essence[(action:is), (det:the)])[(SENTENCE:seeing[(mark:of)](?1, None))]
the essence of seeing is everywhere ⇒ be[(ENTITY:everywhere)](?1, essence[(det:the), (action:is)])[(SENTENCE:seeing[(mark:of)](?1, None))]

get some fresh air and exercise ⇒ get(?22, AND(air[(amod:fresh), (det:some)], exercise))


// Part 6
your family gathers by your bedside ⇒ gather by(family[(nmod_poss:your)], bedside[(nmod_poss:your), (4:by)])
search for answers ⇒ search(?1, None)[(nmod(search, answers[(2:for)])), (ENTITY:answers[(2:for)])]
smell rather unpleasant ⇒ smell(?1, unpleasant[(advmod:rather)])
go to the store ⇒ go to(?1, None)[(ENTITY:store[(det:the), (2:to)])]
use a crosswalk ⇒ use(?3, crosswalk[(det:a)])
you see a head-on collision coming ⇒ see(you, head[(det:a), (punct:-)])[(nmod(head[(det:a), (punct:-)], collision[(6:on)])), (SENTENCE:coming(?1, None)), (ENTITY:collision[(6:on)])]
turning in completed homework assignments ⇒ turn in(?5, None)[(ENTITY:homework assignments[(actioned:completed), (2:in)])]
open your mouth and chew ⇒ open(?7, AND(mouth[(nmod_poss:your)], chew))
clear your vision ⇒ be(vision[(JJ:clear), (nmod_poss:your)], ?9)
desire to win an election ⇒ be(desire, ?10)[(SENTENCE:to win(?1, election[(det:an)]))]
People that work in warehouses ⇒ be(People, ?11)[(SENTENCE:work in(that, None)[(ENTITY:warehouses[(4:in)])]), (acl_relcl(People, work in(that, None)[(ENTITY:warehouses[(4:in)])]))]
29.8 miles per second ⇒ be(miles[(nummod:29<dot>8)], ?12)[(ENTITY:second[(3:per)]), (nmod(miles[(nummod:29<dot>8)], second[(3:per)]))]
get something on the stand ⇒ get(?13, something)[(ENTITY:stand[(3:on), (det:the)])]
A love of knowledge ⇒ be(love[(det:A)], ?15)[(nmod(love[(det:A)], knowledge[(3:of)])), (ENTITY:knowledge[(3:of)])]
get a magazine ⇒ get(?16, magazine[(det:a)])
it looks good on me ⇒ look(it[(cop:good)], None)[(ENTITY:me[(4:on)])]
the effect of dissolving the sugar ⇒ be(effect[(det:the)], ?20)[(SENTENCE:dissolve of(?18, None)[(ENTITY:sugar[(det:the)])])]
killed by somone else ⇒ kill by(?21, somone[(2:by), (advmod:else)])
make sure you don't get sick ⇒ make(?23, sure)[(SENTENCE:NOT(get(you, sick)))]
getting something you really want ⇒ get(?25, something)



