// Alice and Bob
Alice plays football ⇒ play(Alice, football)
Bob plays football ⇒ play(Bob, football)
Alice and Bob play football ⇒ play(AND(Alice, Bob), football)
Alice or Bob play football ⇒ play(OR(Bob, Alice), football)
Alice doesn't play football ⇒ NOT(play(Alice, football))
Bob doesn't play football ⇒ NOT(play(Bob, football))
Dan plays football ⇒ play(Dan, football)
Neither Alice nor Bob play football ⇒ play(NEITHER(Bob, Alice), football)

// But not
Alice is playing but not joking ⇒ play(Alice[(action:playing)], ?1)[(AND:Alice[(action:is  playing )]), (AND:NOT(joking))]
Alice is playing but not in Newcastle ⇒ play(Alice, AND(NOT(Newcastle[(case:in)])))

// Cat and mouse
The cat eats the mouse ⇒ eat(cat[(det:The)], mouse[(det:the)])
The mouse is eaten by the cat ⇒ eat(cat[(subjpass:subjpass), (det:the), (case:by)], mouse[(det:The)])
The mouse eats the cat ⇒ eat(mouse[(det:The)], cat[(det:the)])
The cat is eaten by the mouse ⇒ eat(mouse[(subjpass:subjpass), (det:the), (case:by)], cat[(det:The)])
The cat doesn't eat the mouse ⇒ NOT(eat(cat[(det:The)], mouse[(det:the)]))
The mouse doesn't eat the cat ⇒ NOT(eat(mouse[(det:The)], cat[(det:the)]))

The cat eats ⇒ eat(cat[(det:The), (action:eats)], ?1)
The cat is eaten ⇒ eat(?2[(subjpass:subjpass)], cat[(det:The)])
The cat snores ⇒ snore(cat[(det:The), (action:snores)], None)

// Compounds
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])

// Newcastle
The busy Newcastle city centre is closed for traffic ⇒ close(None, Newcastle[(amod:busy), (extra:city centre), (det:The)])[(ENTITY:traffic[(subjpass:subjpass), (case:for)])]

Newcastle city centre is trafficked ⇒ traffic(?2[(subjpass:subjpass)], None)[(GPE:Newcastle[(extra:city centre)])]
In Newcastle city center on saturdays, traffic is flowing ⇒ flow(traffic, None)[(DATE:saturdays[(case:on)]), (GPE:Newcastle[(case:In), (extra:city center)])]
Traffic is flowing in Newcastle city centre, on Saturdays ⇒ flow(Traffic, None)[(GPE:Newcastle[(extra:city centre), (case:in)]), (DATE:Saturdays[(case:on)])]
On Saturdays, traffic is flowing in Newcastle city centre ⇒ flow(traffic, None)[(DATE:Saturdays[(case:On)]), (GPE:Newcastle[(extra:city centre), (case:in)])]
There is traffic in the Newcastle city centre ⇒ be(traffic[(action:is)], ?1)[(GPE:Newcastle[(det:the), (extra:city centre), (case:in)])]
In the Newcastle city centre there is traffic ⇒ be(traffic, ?2)[(GPE:Newcastle[(det:the), (extra:city centre), (case:In)])]
Newcastle city centre has traffic ⇒ have(Newcastle[(extra:city centre)], traffic)
There is traffic but not in the Newcastle city centre ⇒ be(traffic, ?3)[(AND:NOT(Newcastle[(extra:city centre), (det:the), (case:in)]))]
Newcastle has traffic but not in the city centre ⇒ have(Newcastle, AND(NOT(city centre[(det:the), (case:in)]), traffic))
Newcastle city center does not have traffic ⇒ NOT(have(Newcastle[(extra:city center)], traffic))
It is busy in Newcastle ⇒ be(It, busy)[(GPE:Newcastle[(case:in)])]
Saturdays have usually busy city centers ⇒ have(Saturdays, city centers[(amod:busy), (advmod:usually)])

// Negations
I like non green books ⇒ like(I, books[(JJ:NOT(green))])
I do not skate ⇒ NOT(skate(I[(action:skate)], None))

// Sentences
This is a beautiful world ⇒ be(This[(det:det)], world[(amod:beautiful), (det:a)])
This world is beautiful ⇒ be(world[(det:This)], beautiful)
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])
This is a fabulous Golden Gate Bridge picture ⇒ be(This[(det:det)], picture[(extra:Golden Gate Bridge), (amod:fabulous), (det:a)])

//
To live freely you need to fight ⇒ need(you, fight[(mark:to)](None, None)[(mark:to)])[(SENTENCE:live[(advmod:freely), (mark:To)](None, None))]
to fight ⇒ fight[(mark:to)](None, None)
to be, or not to be, that is the question ⇒ be(that[(det:det)], question[(punct:,), (det:the)])[(OR:be[(mark:to), (punct:,)]), (OR:NOT(be[(mark:to)]))]

// Single node
the dog ⇒ be(dog[(det:the)], ?1)
the roof ⇒ be(roof[(det:the)], ?2)
to fight ⇒ fight[(mark:to)](None, None)
to be ⇒ be[(mark:to)](None, None)

// Short sentences
waste your time ⇒ waste(?1, time[(nmod_poss:your)])
coming to false conclusions ⇒ come(?3, None)[(ENTITY:conclusions[(amod:false), (case:to)])]
bolt from blue ⇒ be(bolt, ?3[(case:from), (cop:blue[(case:from)])])
things to be neat and orderly ⇒ be(things, AND(neat[(mark:to)], orderly))[(ENTITY:things)]
characters in movies ⇒ be(characters, ?4)[(ENTITY:movies[(case:in)])]
you like quilts ⇒ like(you, quilts)
buy dinner ⇒ buy(?5, dinner)
the hot water to run out ⇒ be(water[(amod:hot), (det:the)], ?)[(SENTENCE:run out[(mark:to)](None, None))]
you become fatigued ⇒ become(you[(cop:fatigued)], None)
attempt to steal someone's husband ⇒ be(attempt, ?8)[(SENTENCE:to steal(None, husband[(nmod_poss:someone), (case:'s)]))]

// Part 2
plan your week ⇒ plan(?1, week[(nmod_poss:your)])
privately administered region ⇒ be(region[(amod:administered), (advmod:privately)], ?1)
accumulate fuel in a central location ⇒ accumulate(?4, fuel)[(ENTITY:location[(case:in), (amod:central), (det:a)])]
going off reservation ⇒ go off(?4, None)[(ENTITY:reservation)]
you become more wise ⇒ become(you[(cop:wise[(advmod:more)])], None)
going across the street ⇒ go(?9, None)[(ENTITY:street[(case:across), (det:the)])]
eat a healthy salad ⇒ eat(?6, salad[(amod:healthy), (det:a)])
propulsion of aircraft ⇒ be(propulsion, ?8)[(ENTITY:aircraft[(case:of)])]
//emilia's short tailed opossum ⇒ be(opossum[(case:'s), (nmod_poss:emilia)], ?10)
//If you move you ⇒ if move(you, you)
eating potato crisps ⇒ eat(?11, potato crisps)
reinforce it ⇒ reinforce(?13, it)
figuring out derivatives and integrals ⇒ figure out(?15, AND(derivatives, integrals))
a person to die ⇒ be(person[(det:a)], ?17)[(SENTENCE:die[(mark:to)](None, None))]
information on current events ⇒ be(information, ?18)[(ENTITY:events[(case:on), (amod:current)])]
investing money in stock markets ⇒ invest(?25, money)[(ENTITY:stock markets[(case:in)])]
get one quart beer bottles ⇒ get(?27, quart beer bottles[(nummod:one)])
go to dogs ⇒ go(?29, None)[(ENTITY:dogs[(case:to)])]
a band classroom ⇒ be(band classroom[(det:a)], ?31)
buying a beer ⇒ buy(?24, beer[(det:a)])
