// Alice and Bob
Alice plays football ⇒ play(Alice, football)
Bob plays football ⇒ play(Bob, football)
Alice and Bob play football ⇒ play(AND(Alice, Bob), football)
Alice or Bob play football ⇒ play(OR(Bob, Alice), football)
Alice doesn't play football ⇒ NOT(play(Alice, football))
Bob doesn't play football ⇒ NOT(play(Bob, football))
Dan plays football ⇒ play(Dan, football)
Neither Alice nor Bob play football ⇒ play(NEITHER(Bob, Alice), football)

// But not
Alice is playing but not joking ⇒ play(Alice[(action:playing)], ?1)[(AND:Alice[(action:is  playing )]), (AND:NOT(joking))]
Alice is playing but not in Newcastle ⇒ play(Alice, AND(NOT(Newcastle[(6.000000:in)])))

// Cat and mouse
The cat eats the mouse ⇒ eat(cat[(det:The)], mouse[(det:the)])
The mouse is eaten by the cat ⇒ eat(cat[(subjpass:subjpass), (5.000000:by), (det:the)], mouse[(det:The)])
The mouse eats the cat ⇒ eat(mouse[(det:The)], cat[(det:the)])
The cat is eaten by the mouse ⇒ eat(mouse[(subjpass:subjpass), (5.000000:by), (det:the)], cat[(det:The)])
The cat doesn't eat the mouse ⇒ NOT(eat(cat[(det:The)], mouse[(det:the)]))
The mouse doesn't eat the cat ⇒ NOT(eat(mouse[(det:The)], cat[(det:the)]))

The cat eats ⇒ eat(cat[(action:eats), (det:The)], ?1)
The cat is eaten ⇒ eat(?2[(subjpass:subjpass)], cat[(det:The)])
The cat snores ⇒ snore(cat[(det:The), (action:snores)], None)

// Compounds
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])

// Newcastle
The busy Newcastle city centre is closed for traffic ⇒ close(None, Newcastle[(extra:city centre), (det:The), (amod:busy)])[(ENTITY:traffic[(subjpass:subjpass), (8.000000:for)])]

There is traffic but not in the Newcastle city centre ⇒ be(traffic, ?1)[(AND:NOT(Newcastle[(det:the), (extra:city centre), (6.000000:in)]))]
Newcastle has traffic but not in the city centre ⇒ have(Newcastle, AND(traffic, NOT(city centre[(det:the), (6.000000:in)])))

In Newcastle city center on Saturdays, traffic is flowing ⇒ flow(traffic, None)[(DATE:Saturdays[(5.000000:on)]), (nmod:nmod(Newcastle[(extra:city center), (1.000000:In)], Saturdays[(5.000000:on)])), (GPE:Newcastle[(extra:city center), (1.000000:In)])]
Traffic is flowing in Newcastle city centre, on Saturdays ⇒ flow(Traffic, None)[(DATE:Saturdays[(9.000000:on)]), (GPE:Newcastle[(4.000000:in), (extra:city centre)])]
On Saturdays, traffic is flowing in Newcastle city centre ⇒ flow(traffic, None)[(GPE:Newcastle[(7.000000:in), (extra:city centre)]), (DATE:Saturdays[(1.000000:On)])]
There is traffic in the Newcastle city centre ⇒ be(traffic[(action:is)], ?1)[(GPE:Newcastle[(det:the), (4.000000:in), (extra:city centre)]), (nmod:nmod(traffic[(action:is)], Newcastle[(det:the), (4.000000:in), (extra:city centre)]))]
In the Newcastle city centre there is traffic ⇒ be(traffic, ?2)[(GPE:Newcastle[(extra:city centre), (1.000000:In), (det:the)])]
Newcastle city centre has traffic ⇒ have(Newcastle[(extra:city centre)], traffic)
There is traffic but not in the Newcastle city centre ⇒ be(traffic, ?3)[(AND:NOT(Newcastle[(det:the), (6.000000:in), (extra:city centre)]))]
Newcastle has traffic but not in the city centre ⇒ have(Newcastle, AND(NOT(city centre[(6.000000:in), (det:the)]), traffic))
Newcastle city center does not have traffic ⇒ NOT(have(Newcastle[(extra:city center)], traffic))
Newcastle city centre is trafficked ⇒ traffic(?2[(subjpass:subjpass)], None)[(GPE:Newcastle[(extra:city centre)])]
It is busy in Newcastle ⇒ be(It, busy)[(GPE:Newcastle[(4.000000:in)])]
Saturdays have usually busy city centers ⇒ have(Saturdays, city centers[(amod:busy), (advmod:usually)])

// Negations
I like non green books ⇒ like(I, books[(JJ:NOT(green))])
I do not skate ⇒ NOT(skate(I[(action:skate)], None))

// Sentences
This is a beautiful world ⇒ be(This[(det:det)], world[(amod:beautiful), (det:a)])
This world is beautiful ⇒ be(world[(det:This)], beautiful)
The Golden Gate Bridge is fabulous! ⇒ be(Golden Gate Bridge[(det:The)], fabulous[(punct:!)])
This is a fabulous Golden Gate Bridge picture ⇒ be(This[(det:det)], picture[(extra:Golden Gate Bridge), (amod:fabulous), (det:a)])

//
To live freely you need to fight ⇒ need(you, fight[(mark:to)](None, None)[(mark:to)])[(SENTENCE:live[(advmod:freely), (mark:To)](None, None))]
to fight ⇒ fight[(mark:to)](None, None)
to be, or not to be, that is the question ⇒ be(that[(det:det)], question[(punct:,), (det:the)])[(OR:be[(mark:to), (punct:,)]), (OR:NOT(be[(mark:to)]))]

// Single node
the dog ⇒ be(dog[(det:the)], ?1)
the roof ⇒ be(roof[(det:the)], ?2)
to fight ⇒ fight[(mark:to)](None, None)
to be ⇒ be[(mark:to)](None, None)

// Part 1
waste your time ⇒ waste(?1, time[(nmod_poss:your)])
coming to false conclusions ⇒ come(?3, None)[(ENTITY:conclusions[(amod:false), (2.000000:to)])]
bolt from blue ⇒ be(bolt, ?5[(cop:blue[(2.000000:from)]), (2.000000:from)])
things to be neat and orderly ⇒ be(things, AND(neat[(mark:to)], orderly))[(ENTITY:things)]
characters in movies ⇒ be(characters, ?6)[(nmod:nmod(characters, movies[(2.000000:in)])), (ENTITY:movies[(2.000000:in)])]
you like quilts ⇒ like(you, quilts)
buy dinner ⇒ buy(?7, dinner)
the hot water to run out ⇒ be(water[(det:the), (amod:hot)], ?9)[(SENTENCE:run out[(mark:TO)](None, None))]
you become fatigued ⇒ become(you[(cop:fatigued)], None)
attempt to steal someone's husband ⇒ be(attempt, ?10)[(SENTENCE:to steal(None, husband[(5.000000:'s), (nmod_poss:someone)]))]

// Part 2
plan your week ⇒ plan(?1, week[(nmod_poss:your)])
//privately administered region ⇒ be(region[(amod:administered), (advmod:privately)], ?1) using query without "actioned"
privately administered region ⇒ administer(None, region[(advmod:privately), (actioned:administered)])
accumulate fuel in a central location ⇒ accumulate(?3, fuel)[(ENTITY:location[(3.000000:in), (amod:central), (det:a)])]
going off reservation ⇒ go off(?5, None)[(ENTITY:reservation)]
you become more wise ⇒ become(you[(cop:wise[(advmod:more)])], None)
going across the street ⇒ go(?7, None)[(ENTITY:street[(det:the), (2.000000:across)])]
eat a healthy salad ⇒ eat(?9, salad[(amod:healthy), (det:a)])
propulsion of aircraft ⇒ be(propulsion, ?11)[(nmod:nmod(propulsion, aircraft[(2.000000:of)])), (ENTITY:aircraft[(2.000000:of)])]

// Need to changed "tailed" from being a verb
emilia's short tailed opossum ⇒ be(opossum[(2.000000:'s), (nmod_poss:emilia), (existential:?12)], ?14)[(SENTENCE:tail(?12[(cop:short)], None))]

If you move you ⇒ if move(you, you)
eating potato crisps ⇒ eat(?15, potato crisps)
reinforce it ⇒ reinforce(?17, it)
figuring out derivatives and integrals ⇒ figure out(?19, AND(derivatives, integrals))
a person to die ⇒ be(person[(det:a)], ?21)[(SENTENCE:die[(mark:to)](None, None))]
information on current events ⇒ be(information, ?22)[(nmod:nmod(information, events[(amod:current), (2.000000:on)])), (ENTITY:events[(amod:current), (2.000000:on)])]
investing money in stock markets ⇒ invest(?23, money)[(ENTITY:stock markets[(3.000000:in)])]
get one quart beer bottles ⇒ get(?25, quart beer bottles[(nummod:one)])
go to dogs ⇒ go(?27, None)[(ENTITY:dogs[(2.000000:to)])]
a band classroom ⇒ be(band classroom[(det:a)], ?29)
buying a beer ⇒ buy(?30, beer[(det:a)])

// Part 3
A "Life Saver" candy ⇒ be(candy[(det:A), (extra:Life Saver), (punct:")], ?1)
slip of tongue ⇒ slip(None, None)[(nmod:nmod(slip, tongue[(2.000000:of)])), (ENTITY:tongue[(2.000000:of)])]
more durable than latex ⇒ None(durable[(advmod:more)], None)[(ENTITY:latex[(3.000000:than)])]
Few art gallery patrons ⇒ be(art[(amod:Few)], ?2)[(ENTITY:gallery patrons)]
a capatin ⇒ be(capatin[(det:a)], ?3)
try to work ⇒ try(?4, work[(mark:to)](None, None)[(mark:to)])
putting trash in it ⇒ put(?6, trash)[(ENTITY:it[(3.000000:in)])]
pocket sized notebooks ⇒ be(pocket, ?8[(cop:sized)])[(ENTITY:notebooks)]
cancer is a sickness and cure ⇒ be(cancer, AND(sickness[(det:a)], cure))
if they are rotten they ⇒ be(they[(cop:rotten[(mark:if)])], None)[(ENTITY:they)]
one person's grade ⇒ be(grade[(nummod:one), (3.000000:'s), (nmod_poss:person)], ?9)
practice and discipline ⇒ be(AND(practice, discipline), ?10)
fish in the water ⇒ be(fish, ?11)[(ENTITY:water[(det:the), (2.000000:in)]), (nmod:nmod(fish, water[(det:the), (2.000000:in)]))]
providing information to others ⇒ provide(?12, information)[(ENTITY:others[(3.000000:to)])]
a learning experience ⇒ be(learning experience[(det:a)], ?14)
Taking classes in fencing ⇒ take(?15, classes)[(ENTITY:fencing[(3.000000:in)])]
washing clothes ⇒ wash(None, clothes[(actioned:washing)])
group of reindeer ⇒ be(group, ?17)[(ENTITY:reindeer[(2.000000:of)]), (nmod:nmod(group, reindeer[(2.000000:of)]))]
attack opposing armies ⇒ attack(?18, oppose(None, armies))
A mixed breed dog ⇒ be(breed dog[(amod:mixed), (det:A)], ?19)
you set the timer ⇒ set(you, timer[(det:the)])

// Part 4
Music that is not classical ⇒ be(Music, ?1)[(acl_relcl:acl_relcl(Music, be(that, NOT(classical)))), (SENTENCE:be(that, NOT(classical)))]
a letter from a friend ⇒ be(letter[(det:a)], ?2)[(nmod:nmod(letter[(det:a)], friend[(3.000000:from), (det:a)])), (ENTITY:friend[(3.000000:from), (det:a)])]
line of longitude ⇒ be(line, ?3)[(nmod:nmod(line, longitude[(2.000000:of)])), (ENTITY:longitude[(2.000000:of)])]
second battle of Ypres ⇒ be(battle[(amod:second)], ?4)[(nmod:nmod(battle[(amod:second)], Ypres[(3.000000:of)])), (GPE:Ypres[(3.000000:of)])]
made into mummies ⇒ make(?5, None)[(ENTITY:mummies[(2.000000:into)])]
weigh the consequences ⇒ weigh(?7, consequences[(det:the)])
embryoma of the kidney ⇒ be(embryoma, ?9)[(ENTITY:kidney[(det:the), (2.000000:of)]), (nmod:nmod(embryoma, kidney[(det:the), (2.000000:of)]))]
attend an interview ⇒ attend(?10, interview[(det:an)])
become able to answer more questions ⇒ become(?14[(cop:able)], None)[(SENTENCE:answer to(?12, questions[(amod:more)]))]
being on same track ⇒ be(None, ?16)[(SENTENCE:being(None, None)), (ENTITY:track[(amod:same), (2.000000:on)])]
used in the game of chess ⇒ use(?17, None)[(ENTITY:game[(det:the), (2.000000:in)]), (ENTITY:chess[(5.000000:of)]), (nmod:nmod(game[(det:the), (2.000000:in)], chess[(5.000000:of)]))]
support vessel ⇒ be(support vessel, ?19)
A hard working person ⇒ be(person[(existential:?20), (det:A)], ?22)[(SENTENCE:work(?20[(cop:hard)], None))]
tackle the ball carrier ⇒ tackle(?23, ball carrier[(det:the)])
Mailboxes on the street ⇒ be(Mailboxes, ?25)[(nmod:nmod(Mailboxes, street[(2.000000:on), (det:the)])), (ENTITY:street[(2.000000:on), (det:the)])]
having a burger ⇒ have(?26, burger[(det:a)])
being informed about ongoings ⇒ inform(?28, None)[(ENTITY:ongoings[(3.000000:about)])]
you score well on tests ⇒ score(you, None)[(SENTENCE:tests[(4.000000:on)](None, None))]
run alot ⇒ run(?30, alot)
study closely ⇒ study(None, closely)


